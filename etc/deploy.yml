---

- hosts: build
  gather_facts: no
  tasks:
    - name: set default config
      set_fact:
        build_repo: /home/vagrant/argonbook
        build_dir: /home/vagrant/argonbook/var/build
        ignored: [app/config/parameters.yml, var/logs/, var/sessions/, web/app_dev.php]

    - name: get lastest version
      when: version is not defined
      set_fact: version="{{ (lookup('file', '../app/config/config.yml')|from_yaml).parameters.project.version }}"

    - name: clone version
      git: repo="{{ build_repo }}" dest="{{ build_dir }}" version="{{ version }}" force=yes

    - name: install node modules
      npm: path="{{ build_dir }}" state=latest production=yes

    - name: install bower components
      bower: path="{{ build_dir }}" state=latest production=yes

    - name: install composer vendor packages
      composer: command=install working_dir="{{ build_dir }}" no_dev=yes optimize_autoloader=yes
      environment:
        SYMFONY_ENV: prod

    - name: install public assets
      command: gulp chdir="{{ build_dir }}"

    - name: remove ignored files
      with_items: "{{ ignored }}"
      file: path="{{ build_dir }}/{{ item }}" state=absent

    - name: build version
      command: tar -cpzf "{{ build_dir }}/argonbook_{{ version }}.tar.gz" -C "{{ build_dir }}" app/ bin/ src/ var/ vendor/ web/

    - name: download version
      fetch:
        src: "{{ build_dir }}/argonbook_{{ version }}.tar.gz"
        dest: build/
        flat: yes

- hosts: web
  gather_facts: no
  tasks:
    - name: set default config
      set_fact:
        keep_releases: 5
        working_dir: /srv/www/argonbook.eu
        shared: [app/config/parameters.yml, var/logs, var/sessions]

    - name: set release
      when: not release is defined
      set_fact: release="{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"

    - name: create release dir
      file:
        path: "{{ working_dir }}/releases/{{ release }}"
        state: directory
        owner: "{{ user }}"
        group: www-data

    - name: create shared dir
      with_items: "{{ shared }}"
      file:
        path: "{{ working_dir }}/shared/{{ item|dirname }}"
        state: directory
        owner: "{{ user }}"
        group: www-data

    - name: create parameters.yml
      template:
        src: ../app/config/parameters.yml.j2
        dest: "{{ working_dir }}/shared/app/config/parameters.yml"
        owner: "{{ user }}"
        group: www-data

    - name: upload version
      unarchive:
        src: build/argonbook_{{ version }}.tar.gz
        dest: "{{ working_dir }}/releases/{{ release }}"
        owner: "{{ user }}"
        group: www-data

    - name: create shared symlink
      with_items: "{{ shared }}"
      file:
        src: "{{ working_dir }}/shared/{{ item }}"
        path: "{{ working_dir }}/releases/{{ release }}/{{ item }}"
        force: yes
        state: link
        owner: "{{ user }}"
        group: www-data

    - name: write version file
      copy:
        content: "{{ version }} at {{ lookup('pipe', 'date +%Y-%m-%d_%H:%M:%S') }}\n"
        dest: "{{ working_dir }}/releases/{{ release }}/version.txt"
        owner: "{{ user }}"
        group: www-data

    - name: create current symlink
      file:
        src: "{{ working_dir }}/releases/{{ release }}"
        path: "{{ working_dir }}/current"
        state: link
        owner: "{{ user }}"
        group: www-data
      notify:
        - restart nginx
        - restart php5-fpm

    - name: cleanup releases
      shell: cd "{{ working_dir }}/releases" && ls -t1 | tail -n +$(({{ keep_releases }}+1)) | xargs -n1 rm -rf
