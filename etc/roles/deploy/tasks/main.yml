---

  - block:

      # Retrieve version from local if not found
      - name: get lastest version
        when: version is not defined
        set_fact: version="{{ (lookup('file', '../app/config/config.yml')|from_yaml).parameters.project.version }}"

      # Set realese to current date if not found
      - name: set release
        when: not release is defined
        set_fact: release="{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"

      - name: create release dir
        file:
          path: "{{ working_dir }}/releases/{{ release }}"
          state: directory
          owner: "{{ user }}"
          group: www-data

      - name: create shared dir
        with_items: "{{ shared }}"
        file:
          path: "{{ working_dir }}/shared/{{ item|dirname }}"
          state: directory
          owner: "{{ user }}"
          group: www-data

      - name: create parameters.yml
        template:
          src: ../app/config/parameters.yml.j2
          dest: "{{ working_dir }}/shared/app/config/parameters.yml"
          owner: "{{ user }}"
          group: www-data

      - name: upload version
        unarchive:
          src: build/argonbook_{{ version }}.tar.gz
          dest: "{{ working_dir }}/releases/{{ release }}"
          owner: "{{ user }}"
          group: www-data

      - name: create shared symlink
        with_items: "{{ shared }}"
        file:
          src: "{{ working_dir }}/shared/{{ item }}"
          path: "{{ working_dir }}/releases/{{ release }}/{{ item }}"
          force: yes
          state: link
          owner: "{{ user }}"
          group: www-data

      - name: write version file
        copy:
          content: "{{ version }} at {{ lookup('pipe', 'date +%Y-%m-%d\\ %H:%M:%S') }}\n"
          dest: "{{ working_dir }}/releases/{{ release }}/version.txt"
          owner: "{{ user }}"
          group: www-data

      - name: create current symlink
        file:
          src: "{{ working_dir }}/releases/{{ release }}"
          path: "{{ working_dir }}/current"
          state: link
          owner: "{{ user }}"
          group: www-data

      - name: cleanup releases
        shell: cd "{{ working_dir }}/releases" && ls -t1 | tail -n +$(({{ keep_releases }}+1)) | xargs -n1 rm -rf

    always:

      - name: restart nginx
        service: name=nginx state=restarted
        become: yes

      - name: restart php5-fpm
        service: name=php5-fpm state=restarted
        become: yes
